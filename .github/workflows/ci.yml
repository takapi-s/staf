name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app (test)
        run: npm run tauri:build
        env:
          # テスト用の環境変数（署名なしでビルド）
          TAURI_PRIVATE_KEY: ""
          TAURI_PRIVATE_KEY_PASSWORD: ""

      - name: Check build artifacts
        run: |
          if (Test-Path "src-tauri\target\release\app.exe") {
            Write-Host "✅ Tauri app built successfully"
            Get-Item "src-tauri\target\release\app.exe" | Select-Object Name, Length, LastWriteTime
          } else {
            Write-Host "❌ Tauri app build failed"
            exit 1
          }

      - name: Check installer
        run: |
          $base = "src-tauri\target\release\bundle\nsis"
          $pattern = "STAF_*_x64-setup.exe"
          $files = Get-ChildItem -Path $base -Filter $pattern -ErrorAction SilentlyContinue | Sort-Object LastWriteTime -Descending
          if ($files -and $files.Length -gt 0) {
            $installerPath = $files[0].FullName
            Write-Host "✅ Installer created successfully"
            Get-Item $installerPath | Select-Object Name, Length, LastWriteTime
          } else {
            Write-Host "❌ Installer creation failed"
            Write-Host "Searched: $base with pattern $pattern"
            exit 1
          }

  lint-check:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: |
          # TypeScriptの型チェック
          npm run typecheck
          
          # 必要に応じてESLintやPrettierを追加
          Write-Host "✅ Linting completed successfully"
